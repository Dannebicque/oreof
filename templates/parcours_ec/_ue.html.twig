{% if ue.ueRaccrochee == true %}
    {% set ue = ue.ueRaccrochee.ue %}
    {% set raccrocheUe = true or isSemestreRaccroche %}
{% else %}
    {% set raccrocheUe = false or isSemestreRaccroche %}
{% endif %}

{% set editableCfvu = isAccessible(dpeParcours, 'cfvu') %}

<tr>
    <th colspan="7" class="font-weight-bold">{{ ue.display(parcours) }} {% if raccrocheUe == true %}<i class="fa fa-link"></i>{% endif %}</th>
</tr>
<tr>
    <th class="font-weight-bold">EC</th>
    <th class="font-weight-bold">Fiche</th>
    <th class="font-weight-bold">Type EC</th>
    <th class="font-weight-bold">ECTS</th>
    <th class="font-weight-bold">BCC</th>
    <th class="font-weight-bold">Vol. Horaire</th>
    <th class="font-weight-bold">MCCC</th>


</tr>
{# todo: améliorer l'affichage et reprendre les éléments comme CalculStructure... #}
{% for ec in tabEcs[semParc.ordre][ue.id] %}
    <tr>
        <th>{{ ec.display }} {% if raccrocheUe == true %}<i class="fa fa-link"></i>{% endif %}</th>
        <td>

            {% if ec.natureUeEc != null and ec.natureUeEc.isLibre ==  true %}
                <span class="badge bg-info">EC Libre</span>
            {% elseif ec.ecParent == null and ec.natureUeEc != null and ec.natureUeEc.isChoix ==  true %}
                <span class="badge bg-info">EC à choix</span>
            {% elseif ec.ficheMatiere != null %}
                {# todo: isGranted ? #}
                {% if
                    isAccessible(dpeParcours, 'cfvu') and
                    ec.ficheMatiere.parcours != null and ec.ficheMatiere.parcours.id == parcours.id and isSemestreRaccroche == false and raccrocheUe == false %}
                    <a
                            href="{{ path('app_fiche_matiere_edit',{slug: ec.ficheMatiere.slug}) }}"
                            class="btn btn-sm btn-outline-info"
                            data-bs-toggle="tooltip"
                            data-bs-placement="bottom"
                            title="Modifier la fiche EC/matière"
                    >
                        <i class="fal fa-file"></i>
                        {% if ec.ficheMatiere.remplissage.isFull() == true %}
                            <span class="badge bg-success"> Complet</span>
                        {% else %}
                            <span class="badge bg-warning"> À compléter</span>
                        {% endif %}
                    </a>
                {% else %}
                    <a
                            href="{{ path('app_fiche_matiere_show',{slug: ec.ficheMatiere.slug}) }}"
                            class="btn btn-sm btn-outline-info"
                            data-bs-toggle="tooltip"
                            data-bs-placement="bottom"
                            target="_blank"
                            title="Voir la fiche EC/matière"
                    >
                        <span class="badge bg-info"> Voir la fiche</span>
                    </a>
                {% endif %}
            {% else %}
                <span class="badge bg-danger"> Erreur</span>
            {% endif %}
        </td>
        <td>
            <label for="typeEc_{{ ec.id }}" class="sr-only">Type EC</label>
            {% if isAccessible(dpeParcours, 'cfvu') %} {# todo: isGranted ? #}
                <select
                        class="form-select"
                        name="typeEc_{{ ec.id }}"
                        id="typeEc_{{ ec.id }}"
                        data-bs-toggle="tooltip"
                        {% if raccrocheUe %}disabled{% endif %}
                        data-bs-placement="bottom"
                        title="Type EC"
                        {{ stimulus_action('parcours--ec', 'changeTypeEc', 'change', {
                            ec:ec.id
                        }) }}
                >
                    <option value="">Choisir dans la liste</option>
                    {% for typeEc in typesEc %}
                        <option
                                value="{{ typeEc.id }}"
                                {% if ec.typeEc != null and ec.typeEc.id == typeEc.id %}selected{% endif %}>
                            {{ typeEc.libelle }}
                        </option>
                    {% endfor %}
                </select>
            {% else %}
                {% if ec.typeEc != null %}{{ ec.typeEc.libelle }}{% else %}<span
                        class="text-danger">Non défini</span>{% endif %}
            {% endif %}
        </td>
        <td>
            {{ component('badge_ects', {
                elementConstitutif: ec,
                parcours: parcours,
            }) }}
        </td>
        <td>
            {{ component('badge_bcc', {
                elementConstitutif: ec,
                parcours: parcours,
                dpeParcours: dpeParcours,
                ue: ue,
                editable: true,
                deplacer: true,
                texte: true
            }) }}
        </td>
        <td>
            {{ component('badge_heures', {
                elementConstitutif: ec,
                parcours: parcours,
                dpeParcours: dpeParcours,
                ue: ue,
                editable: not raccrocheUe,
                deplacer: true,
                texte: true
            }) }}
        </td>
        <td>
            {{ component('badge_mccc', {
                elementConstitutif: ec,
                parcours: parcours,
                dpeParcours: dpeParcours,
                ue: ue,
                editable: not raccrocheUe,
                deplacer: true,
                texte: true
            }) }}
        </td>
    </tr>
{#    {% if ec.ficheMatiere != null and ec.ficheMatiere.parcours != null and not (ec.ficheMatiere.parcours.id == parcours.id and raccrocheSem == false and raccrocheUe == false) %}#}
{#        <tr>#}
{#            <td colspan="3" class="text-end">Informations saisies sur la fiche EC/parcours</td>#}
{#            <td>#}
{#                <div class="form-check mb-2">#}
{#                    <input class="form-check-input" type="checkbox"#}
{#                           id="synchroEcts"#}
{#                           {{ editableCfvu ? '' : 'disabled' }}#}
{#                           name="synchroEcts"#}
{#                            {{ stimulus_action('parcours--ec', 'synchro', 'change', {#}
{#                                ec:ec.id,#}
{#                                type: 'synchroEcts'#}
{#                            }) }}#}
{#                            {% if ec.synchroEcts == true %}checked{% endif %}#}
{#                    >#}
{#                    <label class="form-check-label"#}
{#                           for="synchroEcts"> Raccrocher les ECTS#}
{#                        <i class="fal fa-question-circle ms-1" data-controller="tooltip"#}
{#                           data-tooltip-placement-value="bottom"#}
{#                           title="{{ 'parcours_ec.helps.synchroEcts'|trans({}, 'help') }}"></i></label>#}
{#                </div>#}
{#            </td>#}
{#            <td>#}
{#                <div class="form-check mb-2">#}
{#                    <input class="form-check-input" type="checkbox"#}
{#                           id="synchroBcc"#}
{#                            {{ editableCfvu ? '' : 'disabled' }}#}
{#                           name="synchroBcc"#}
{#                            {{ stimulus_action('parcours--ec', 'synchro', 'change', {#}
{#                                ec:ec.id,#}
{#                                type:'synchroBcc'#}
{#                            }) }}#}
{#                            {% if ec.synchroBcc == true %}checked{% endif %}#}
{#                    >#}
{#                    <label class="form-check-label"#}
{#                           for="synchroBcc"> Raccrocher les BCC#}
{#                        <i class="fal fa-question-circle ms-1" data-controller="tooltip"#}
{#                           data-tooltip-placement-value="bottom"#}
{#                           title="{{ 'parcours_ec.helps.synchroBcc'|trans({}, 'help') }}"></i></label>#}
{#                </div>#}
{#            </td>#}
{#            <td>#}
{#                <div class="form-check mb-2">#}
{#                    <input class="form-check-input" type="checkbox"#}
{#                           id="synchroHeures"#}
{#                           name="synchroHeures"#}
{#                            {{ editableCfvu ? '' : 'disabled' }}#}
{#                            {{ stimulus_action('parcours--ec', 'synchro', 'change', {#}
{#                                ec:ec.id,#}
{#                                type:'synchroHeures'#}
{#                            }) }}#}
{#                            {% if ec.synchroHeures == true %}checked{% endif %}#}
{#                    >#}
{#                    <label class="form-check-label"#}
{#                           for="synchroHeures"> Raccrocher les Heures#}
{#                        <i class="fal fa-question-circle ms-1" data-controller="tooltip"#}
{#                           data-tooltip-placement-value="bottom"#}
{#                           title="{{ 'parcours_ec.helps.synchroHeures'|trans({}, 'help') }}"></i>#}
{#                    </label>#}
{#                </div>#}
{#            </td>#}
{#            <td>#}
{#                <div class="form-check mb-2">#}
{#                    <input class="form-check-input" type="checkbox"#}
{#                           id="synchroMccc"#}
{#                           name="synchroMccc"#}
{#                            {{ editableCfvu ? '' : 'disabled' }}#}
{#                            {{ stimulus_action('parcours--ec', 'synchro', 'change', {#}
{#                                ec:ec.id,#}
{#                                type:'synchroMccc'#}
{#                            }) }}#}
{#                            {% if ec.synchroMccc == true %}checked{% endif %}#}
{#                    >#}
{#                    <label class="form-check-label"#}
{#                           for="synchroMccc"> Raccrocher les MCCC#}
{#                        <i class="fal fa-question-circle ms-1" data-controller="tooltip"#}
{#                           data-tooltip-placement-value="bottom"#}
{#                           title="{{ 'parcours_ec.helps.synchroMccc'|trans({}, 'help') }}"></i></label>#}
{#                </div>#}
{#            </td>#}
{#        </tr>#}
{#    {% endif %}#}
{% endfor %}
